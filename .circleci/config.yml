version: 2.1
executors:
  bloxroute-executor:
    docker:
      - image: circleci/python:3.7.0
    environment:
      PYTHONPATH: /home/circleci/ws/bxcommon/src:/home/circleci/ws/bxextensions:/home/circleci/ws/bxcommon-internal/src/
    working_directory: ~/ws
jobs:
  initialize:
    executor: bloxroute-executor
    working_directory: ~/ws
    steps:
      - attach_workspace:
          at: ~/ws
      - checkout:
          path:
            "bxcommon"
      - run:
          command: |
            sudo apt update &&
            sudo apt install build-essential automake autogen autoconf libtool libtool-bin libssl-dev cmake linux-headers-amd64
      - run: # install and activate virtual environment with pip
          command: |
            cd ~/ws
            python -m virtualenv venv
            . venv/bin/activate
            pip install -r bxcommon/requirements.txt
            pip install -r bxcommon/requirements-dev.txt
      - restore_cache: # restores saved dependency cache if the Branch key template or requirements.txt files have not changed since the previous run
          key: deps1-{{ .Branch }}-{{ checksum "bxcommon/requirements.txt" }}-{{ checksum "bxcommon/requirements-dev.txt" }}
      - save_cache: # special step to save dependency cache
          key: deps1-{{ .Branch }}-{{ checksum "bxcommon/requirements.txt" }}-{{ checksum "bxcommon/requirements-dev.txt" }}
          paths:
            - "venv"
      - run:
          name: Install bxextensions dependency
          command: |
            . venv/bin/activate
            { # try
                echo "Trying to clone identical branch name '$CIRCLE_BRANCH' from bxextensions."
                git clone -b $CIRCLE_BRANCH --single-branch --depth=1 --recursive git@github.com:bloXroute-Labs/bxextensions-private.git bxextensions
            } || { # catch
                echo "Trying bxextensions develop branch, could not find identical branch name '$CIRCLE_BRANCH'."
                git clone -b develop --single-branch --depth=1 --recursive git@github.com:bloXroute-Labs/bxextensions-private.git bxextensions
            }
            cd bxextensions
            python build_extensions.py
      - persist_to_workspace:
          root: .
          paths:
            - venv
            - bxextensions
            - bxcommon

  check:
    executor: bloxroute-executor
    working_directory: ~/ws
    steps:
      - attach_workspace:
          at: ~/ws
      - run: # run pylint
          name: Lint Score
          command: |
            . venv/bin/activate
            cd bxcommon
            # The || exit 0 bypasses not failing the build for <10 score
            pylint src/bxcommon --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" --rcfile=pylintrc || exit 0
      - run:
          name: Static Analysis
          command: |
            . venv/bin/activate
            cd bxcommon
            # remove dev configuration
            rm .pyre_configuration
            pyre --local-configuration .pyre_configuration.circle check
  test:
    executor: bloxroute-executor
    working_directory: ~/ws
    steps:
      - attach_workspace:
          at: ~/ws
      - run:
          name: Unit Tests
          command: |
            . venv/bin/activate
            cd bxcommon/test/unit
            python -m unittest discover --verbose
      - run:
          name: Integration Tests
          command: |
            . venv/bin/activate
            cd bxcommon/test/integration
            python -m unittest discover --verbose
      - run:
          name: Check Coverage
          command: |
            . venv/bin/activate
            cd bxcommon/test/unit
            coverage run --source=../../src -m unittest discover && coverage report --fail-under=01
      - store_artifacts:
          path: test-reports/
          destination: tr1

  e2e:
    executor: bloxroute-executor
    steps:
      - attach_workspace:
          at: ~/ws
      - checkout:
          path:
            "bxcommon"
      - run:
          name: Try to clone corresponding branches
          command: |
            cd ~/ws
            { # try
                echo "Trying to clone identical branch name '$CIRCLE_BRANCH' from bxe2e."
                git clone -b $CIRCLE_BRANCH --single-branch --depth=1 git@github.com:bloXroute-Labs/bxe2e.git
            } || { # catch
                echo "Trying bxe2e develop branch, could not find identical branch name '$CIRCLE_BRANCH'."
                git clone -b develop --single-branch --depth=1 git@github.com:bloXroute-Labs/bxe2e.git
            }
            { # try
                echo "Trying to clone identical branch name '$CIRCLE_BRANCH' from bxrelay."
                git clone -b $CIRCLE_BRANCH --single-branch --depth=1 git@github.com:bloXroute-Labs/bxrelay.git
            } || { # catch
                echo "Trying bxrelay develop branch, could not find identical branch name '$CIRCLE_BRANCH."
                git clone -b develop --single-branch --depth=1 git@github.com:bloXroute-Labs/bxrelay.git
            }
            { # try
                echo "Trying to clone identical branch name '$CIRCLE_BRANCH  from bxgateway."
                git clone -b $CIRCLE_BRANCH --single-branch --depth=1 git@github.com:bloXroute-Labs/bxgateway-private.git bxgateway
            } || { # catch
                echo "Trying bxgateway develop branch, could not find identical branch name '$CIRCLE_BRANCH."
                git clone -b develop --single-branch --depth=1 git@github.com:bloXroute-Labs/bxgateway-private.git bxgateway
            }
            { # try
                echo "Trying to clone identical branch name '$CIRCLE_BRANCH  from bxcommon-internal."
                git clone -b $CIRCLE_BRANCH --single-branch --depth=1 git@github.com:bloXroute-Labs/bxcommon-internal.git bxcommon-internal
            } || { # catch
                echo "Trying bxcommon-internal develop branch, could not find identical branch name '$CIRCLE_BRANCH."
                git clone -b develop --single-branch --depth=1 git@github.com:bloXroute-Labs/bxcommon-internal.git bxcommon-internal
            }
      - run:
          name: Initialize virtualenv
          command: |
            . venv/bin/activate
            pip install -r bxrelay/requirements.txt
            pip install -r bxrelay/requirements-dev.txt
            pip install -r bxgateway/requirements.txt
            pip install -r bxgateway/requirements-dev.txt
      - run:
          name: Integration Test
          command: |
            . venv/bin/activate
            cd bxe2e/test/integration
            PYTHONPATH=$PYTHONPATH:/home/circleci/ws/bxcommon-internal/src:/home/circleci/ws/bxe2e/src:/home/circleci/ws/bxgateway/src:/home/circleci/ws/bxrelay/src \
            python -m unittest discover --verbose
  build:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/ws

    steps:
      - checkout
      - attach_workspace:
          at: ~/ws
      - run:
          name: Package
          command: 'echo "Yay build!"'

  deploy:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/ws

    steps:
      - checkout
      - attach_workspace:
          at: ~/ws
      - run:
          name: Package
          command: 'echo "Yay deploy!"'

workflows:
  version: 2

  test-build:
    jobs:
      - initialize
      - check:
          requires:
            - initialize
      - test:
          requires:
            - initialize
      - e2e:
          requires:
            - initialize
      - build:
          requires:
            - initialize
          filters:
            branches:
              only: develop
      - deploy:
          filters:
            branches:
              only: develop
          requires:
            - build
